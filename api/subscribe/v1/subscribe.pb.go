// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: api/subscribe/v1/subscribe.proto

package v1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SubscribeEntitiesByIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Entities []string `protobuf:"bytes,2,rep,name=entities,proto3" json:"entities,omitempty"`
}

func (x *SubscribeEntitiesByIDsRequest) Reset() {
	*x = SubscribeEntitiesByIDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeEntitiesByIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeEntitiesByIDsRequest) ProtoMessage() {}

func (x *SubscribeEntitiesByIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeEntitiesByIDsRequest.ProtoReflect.Descriptor instead.
func (*SubscribeEntitiesByIDsRequest) Descriptor() ([]byte, []int) {
	return file_api_subscribe_v1_subscribe_proto_rawDescGZIP(), []int{0}
}

func (x *SubscribeEntitiesByIDsRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SubscribeEntitiesByIDsRequest) GetEntities() []string {
	if x != nil {
		return x.Entities
	}
	return nil
}

type SubscribeEntitiesByIDsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SubscribeEntitiesByIDsResponse) Reset() {
	*x = SubscribeEntitiesByIDsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeEntitiesByIDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeEntitiesByIDsResponse) ProtoMessage() {}

func (x *SubscribeEntitiesByIDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeEntitiesByIDsResponse.ProtoReflect.Descriptor instead.
func (*SubscribeEntitiesByIDsResponse) Descriptor() ([]byte, []int) {
	return file_api_subscribe_v1_subscribe_proto_rawDescGZIP(), []int{1}
}

func (x *SubscribeEntitiesByIDsResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SubscribeEntitiesByIDsResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type SubscribeEntitiesByGroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Groups []string `protobuf:"bytes,2,rep,name=groups,proto3" json:"groups,omitempty"`
}

func (x *SubscribeEntitiesByGroupsRequest) Reset() {
	*x = SubscribeEntitiesByGroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeEntitiesByGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeEntitiesByGroupsRequest) ProtoMessage() {}

func (x *SubscribeEntitiesByGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeEntitiesByGroupsRequest.ProtoReflect.Descriptor instead.
func (*SubscribeEntitiesByGroupsRequest) Descriptor() ([]byte, []int) {
	return file_api_subscribe_v1_subscribe_proto_rawDescGZIP(), []int{2}
}

func (x *SubscribeEntitiesByGroupsRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SubscribeEntitiesByGroupsRequest) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

type SubscribeEntitiesByGroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SubscribeEntitiesByGroupsResponse) Reset() {
	*x = SubscribeEntitiesByGroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeEntitiesByGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeEntitiesByGroupsResponse) ProtoMessage() {}

func (x *SubscribeEntitiesByGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeEntitiesByGroupsResponse.ProtoReflect.Descriptor instead.
func (*SubscribeEntitiesByGroupsResponse) Descriptor() ([]byte, []int) {
	return file_api_subscribe_v1_subscribe_proto_rawDescGZIP(), []int{3}
}

func (x *SubscribeEntitiesByGroupsResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SubscribeEntitiesByGroupsResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type SubscribeEntitiesByModelsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Models []string `protobuf:"bytes,2,rep,name=models,proto3" json:"models,omitempty"`
}

func (x *SubscribeEntitiesByModelsRequest) Reset() {
	*x = SubscribeEntitiesByModelsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeEntitiesByModelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeEntitiesByModelsRequest) ProtoMessage() {}

func (x *SubscribeEntitiesByModelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeEntitiesByModelsRequest.ProtoReflect.Descriptor instead.
func (*SubscribeEntitiesByModelsRequest) Descriptor() ([]byte, []int) {
	return file_api_subscribe_v1_subscribe_proto_rawDescGZIP(), []int{4}
}

func (x *SubscribeEntitiesByModelsRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SubscribeEntitiesByModelsRequest) GetModels() []string {
	if x != nil {
		return x.Models
	}
	return nil
}

type SubscribeEntitiesByModelsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SubscribeEntitiesByModelsResponse) Reset() {
	*x = SubscribeEntitiesByModelsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeEntitiesByModelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeEntitiesByModelsResponse) ProtoMessage() {}

func (x *SubscribeEntitiesByModelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeEntitiesByModelsResponse.ProtoReflect.Descriptor instead.
func (*SubscribeEntitiesByModelsResponse) Descriptor() ([]byte, []int) {
	return file_api_subscribe_v1_subscribe_proto_rawDescGZIP(), []int{5}
}

func (x *SubscribeEntitiesByModelsResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SubscribeEntitiesByModelsResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UnsubscribeEntitiesByIDsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Entities []string `protobuf:"bytes,2,rep,name=entities,proto3" json:"entities,omitempty"`
}

func (x *UnsubscribeEntitiesByIDsRequest) Reset() {
	*x = UnsubscribeEntitiesByIDsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeEntitiesByIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeEntitiesByIDsRequest) ProtoMessage() {}

func (x *UnsubscribeEntitiesByIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeEntitiesByIDsRequest.ProtoReflect.Descriptor instead.
func (*UnsubscribeEntitiesByIDsRequest) Descriptor() ([]byte, []int) {
	return file_api_subscribe_v1_subscribe_proto_rawDescGZIP(), []int{6}
}

func (x *UnsubscribeEntitiesByIDsRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UnsubscribeEntitiesByIDsRequest) GetEntities() []string {
	if x != nil {
		return x.Entities
	}
	return nil
}

type UnsubscribeEntitiesByIDsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UnsubscribeEntitiesByIDsResponse) Reset() {
	*x = UnsubscribeEntitiesByIDsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeEntitiesByIDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeEntitiesByIDsResponse) ProtoMessage() {}

func (x *UnsubscribeEntitiesByIDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeEntitiesByIDsResponse.ProtoReflect.Descriptor instead.
func (*UnsubscribeEntitiesByIDsResponse) Descriptor() ([]byte, []int) {
	return file_api_subscribe_v1_subscribe_proto_rawDescGZIP(), []int{7}
}

func (x *UnsubscribeEntitiesByIDsResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UnsubscribeEntitiesByIDsResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ListSubscribeEntitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum      uint64 `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	PageSize     uint64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	OrderBy      string `protobuf:"bytes,3,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	IsDescending bool   `protobuf:"varint,4,opt,name=is_descending,json=isDescending,proto3" json:"is_descending,omitempty"`
	KeyWords     string `protobuf:"bytes,5,opt,name=key_words,json=keyWords,proto3" json:"key_words,omitempty"`
	SearchKey    string `protobuf:"bytes,6,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
	Id           uint64 `protobuf:"varint,7,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ListSubscribeEntitiesRequest) Reset() {
	*x = ListSubscribeEntitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSubscribeEntitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubscribeEntitiesRequest) ProtoMessage() {}

func (x *ListSubscribeEntitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubscribeEntitiesRequest.ProtoReflect.Descriptor instead.
func (*ListSubscribeEntitiesRequest) Descriptor() ([]byte, []int) {
	return file_api_subscribe_v1_subscribe_proto_rawDescGZIP(), []int{8}
}

func (x *ListSubscribeEntitiesRequest) GetPageNum() uint64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListSubscribeEntitiesRequest) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListSubscribeEntitiesRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *ListSubscribeEntitiesRequest) GetIsDescending() bool {
	if x != nil {
		return x.IsDescending
	}
	return false
}

func (x *ListSubscribeEntitiesRequest) GetKeyWords() string {
	if x != nil {
		return x.KeyWords
	}
	return ""
}

func (x *ListSubscribeEntitiesRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

func (x *ListSubscribeEntitiesRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ListSubscribeEntitiesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total    uint64    `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	PageNum  uint64    `protobuf:"varint,2,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	LastPage uint64    `protobuf:"varint,3,opt,name=last_page,json=lastPage,proto3" json:"last_page,omitempty"`
	PageSize uint64    `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Data     []*Entity `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListSubscribeEntitiesResponse) Reset() {
	*x = ListSubscribeEntitiesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSubscribeEntitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubscribeEntitiesResponse) ProtoMessage() {}

func (x *ListSubscribeEntitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubscribeEntitiesResponse.ProtoReflect.Descriptor instead.
func (*ListSubscribeEntitiesResponse) Descriptor() ([]byte, []int) {
	return file_api_subscribe_v1_subscribe_proto_rawDescGZIP(), []int{9}
}

func (x *ListSubscribeEntitiesResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListSubscribeEntitiesResponse) GetPageNum() uint64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListSubscribeEntitiesResponse) GetLastPage() uint64 {
	if x != nil {
		return x.LastPage
	}
	return 0
}

func (x *ListSubscribeEntitiesResponse) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListSubscribeEntitiesResponse) GetData() []*Entity {
	if x != nil {
		return x.Data
	}
	return nil
}

type SubscribeObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Endpoint    string `protobuf:"bytes,4,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
}

func (x *SubscribeObject) Reset() {
	*x = SubscribeObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeObject) ProtoMessage() {}

func (x *SubscribeObject) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeObject.ProtoReflect.Descriptor instead.
func (*SubscribeObject) Descriptor() ([]byte, []int) {
	return file_api_subscribe_v1_subscribe_proto_rawDescGZIP(), []int{10}
}

func (x *SubscribeObject) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SubscribeObject) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SubscribeObject) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SubscribeObject) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

type CreateSubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CreateSubscribeRequest) Reset() {
	*x = CreateSubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubscribeRequest) ProtoMessage() {}

func (x *CreateSubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubscribeRequest.ProtoReflect.Descriptor instead.
func (*CreateSubscribeRequest) Descriptor() ([]byte, []int) {
	return file_api_subscribe_v1_subscribe_proto_rawDescGZIP(), []int{11}
}

func (x *CreateSubscribeRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateSubscribeRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CreateSubscribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Endpoint    string `protobuf:"bytes,4,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
}

func (x *CreateSubscribeResponse) Reset() {
	*x = CreateSubscribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSubscribeResponse) ProtoMessage() {}

func (x *CreateSubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSubscribeResponse.ProtoReflect.Descriptor instead.
func (*CreateSubscribeResponse) Descriptor() ([]byte, []int) {
	return file_api_subscribe_v1_subscribe_proto_rawDescGZIP(), []int{12}
}

func (x *CreateSubscribeResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateSubscribeResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateSubscribeResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateSubscribeResponse) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

type UpdateSubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Id          uint64 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateSubscribeRequest) Reset() {
	*x = UpdateSubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubscribeRequest) ProtoMessage() {}

func (x *UpdateSubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubscribeRequest.ProtoReflect.Descriptor instead.
func (*UpdateSubscribeRequest) Descriptor() ([]byte, []int) {
	return file_api_subscribe_v1_subscribe_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateSubscribeRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateSubscribeRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateSubscribeRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateSubscribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Endpoint    string `protobuf:"bytes,4,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
}

func (x *UpdateSubscribeResponse) Reset() {
	*x = UpdateSubscribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubscribeResponse) ProtoMessage() {}

func (x *UpdateSubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubscribeResponse.ProtoReflect.Descriptor instead.
func (*UpdateSubscribeResponse) Descriptor() ([]byte, []int) {
	return file_api_subscribe_v1_subscribe_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateSubscribeResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateSubscribeResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateSubscribeResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateSubscribeResponse) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

type DeleteSubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteSubscribeRequest) Reset() {
	*x = DeleteSubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSubscribeRequest) ProtoMessage() {}

func (x *DeleteSubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSubscribeRequest.ProtoReflect.Descriptor instead.
func (*DeleteSubscribeRequest) Descriptor() ([]byte, []int) {
	return file_api_subscribe_v1_subscribe_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteSubscribeRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteSubscribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteSubscribeResponse) Reset() {
	*x = DeleteSubscribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSubscribeResponse) ProtoMessage() {}

func (x *DeleteSubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSubscribeResponse.ProtoReflect.Descriptor instead.
func (*DeleteSubscribeResponse) Descriptor() ([]byte, []int) {
	return file_api_subscribe_v1_subscribe_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteSubscribeResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetSubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSubscribeRequest) Reset() {
	*x = GetSubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscribeRequest) ProtoMessage() {}

func (x *GetSubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscribeRequest.ProtoReflect.Descriptor instead.
func (*GetSubscribeRequest) Descriptor() ([]byte, []int) {
	return file_api_subscribe_v1_subscribe_proto_rawDescGZIP(), []int{17}
}

func (x *GetSubscribeRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetSubscribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Endpoint    string `protobuf:"bytes,4,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Count       uint64 `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`
	CreatedAt   int64  `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   int64  `protobuf:"varint,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *GetSubscribeResponse) Reset() {
	*x = GetSubscribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubscribeResponse) ProtoMessage() {}

func (x *GetSubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubscribeResponse.ProtoReflect.Descriptor instead.
func (*GetSubscribeResponse) Descriptor() ([]byte, []int) {
	return file_api_subscribe_v1_subscribe_proto_rawDescGZIP(), []int{18}
}

func (x *GetSubscribeResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetSubscribeResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GetSubscribeResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetSubscribeResponse) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *GetSubscribeResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetSubscribeResponse) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *GetSubscribeResponse) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type ListSubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum      uint64 `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	PageSize     uint64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	OrderBy      string `protobuf:"bytes,3,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	IsDescending bool   `protobuf:"varint,4,opt,name=is_descending,json=isDescending,proto3" json:"is_descending,omitempty"`
	KeyWords     string `protobuf:"bytes,5,opt,name=key_words,json=keyWords,proto3" json:"key_words,omitempty"`
	SearchKey    string `protobuf:"bytes,6,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
}

func (x *ListSubscribeRequest) Reset() {
	*x = ListSubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubscribeRequest) ProtoMessage() {}

func (x *ListSubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubscribeRequest.ProtoReflect.Descriptor instead.
func (*ListSubscribeRequest) Descriptor() ([]byte, []int) {
	return file_api_subscribe_v1_subscribe_proto_rawDescGZIP(), []int{19}
}

func (x *ListSubscribeRequest) GetPageNum() uint64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListSubscribeRequest) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListSubscribeRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *ListSubscribeRequest) GetIsDescending() bool {
	if x != nil {
		return x.IsDescending
	}
	return false
}

func (x *ListSubscribeRequest) GetKeyWords() string {
	if x != nil {
		return x.KeyWords
	}
	return ""
}

func (x *ListSubscribeRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

type ListSubscribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total    uint64             `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	PageNum  uint64             `protobuf:"varint,2,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	LastPage uint64             `protobuf:"varint,3,opt,name=last_page,json=lastPage,proto3" json:"last_page,omitempty"`
	PageSize uint64             `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Data     []*SubscribeObject `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *ListSubscribeResponse) Reset() {
	*x = ListSubscribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSubscribeResponse) ProtoMessage() {}

func (x *ListSubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSubscribeResponse.ProtoReflect.Descriptor instead.
func (*ListSubscribeResponse) Descriptor() ([]byte, []int) {
	return file_api_subscribe_v1_subscribe_proto_rawDescGZIP(), []int{20}
}

func (x *ListSubscribeResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListSubscribeResponse) GetPageNum() uint64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *ListSubscribeResponse) GetLastPage() uint64 {
	if x != nil {
		return x.LastPage
	}
	return 0
}

func (x *ListSubscribeResponse) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListSubscribeResponse) GetData() []*SubscribeObject {
	if x != nil {
		return x.Data
	}
	return nil
}

type ChangeSubscribedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TargetID    uint64   `protobuf:"varint,2,opt,name=targetID,proto3" json:"targetID,omitempty"`
	SelectedIDs []string `protobuf:"bytes,3,rep,name=selectedIDs,proto3" json:"selectedIDs,omitempty"`
}

func (x *ChangeSubscribedRequest) Reset() {
	*x = ChangeSubscribedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeSubscribedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeSubscribedRequest) ProtoMessage() {}

func (x *ChangeSubscribedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeSubscribedRequest.ProtoReflect.Descriptor instead.
func (*ChangeSubscribedRequest) Descriptor() ([]byte, []int) {
	return file_api_subscribe_v1_subscribe_proto_rawDescGZIP(), []int{21}
}

func (x *ChangeSubscribedRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ChangeSubscribedRequest) GetTargetID() uint64 {
	if x != nil {
		return x.TargetID
	}
	return 0
}

func (x *ChangeSubscribedRequest) GetSelectedIDs() []string {
	if x != nil {
		return x.SelectedIDs
	}
	return nil
}

type ChangeSubscribedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ChangeSubscribedResponse) Reset() {
	*x = ChangeSubscribedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeSubscribedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeSubscribedResponse) ProtoMessage() {}

func (x *ChangeSubscribedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeSubscribedResponse.ProtoReflect.Descriptor instead.
func (*ChangeSubscribedResponse) Descriptor() ([]byte, []int) {
	return file_api_subscribe_v1_subscribe_proto_rawDescGZIP(), []int{22}
}

func (x *ChangeSubscribedResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type MySubscribedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum      uint64 `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	PageSize     uint64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	OrderBy      string `protobuf:"bytes,3,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	IsDescending bool   `protobuf:"varint,4,opt,name=is_descending,json=isDescending,proto3" json:"is_descending,omitempty"`
	KeyWords     string `protobuf:"bytes,5,opt,name=key_words,json=keyWords,proto3" json:"key_words,omitempty"`
	SearchKey    string `protobuf:"bytes,6,opt,name=search_key,json=searchKey,proto3" json:"search_key,omitempty"`
}

func (x *MySubscribedRequest) Reset() {
	*x = MySubscribedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MySubscribedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MySubscribedRequest) ProtoMessage() {}

func (x *MySubscribedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MySubscribedRequest.ProtoReflect.Descriptor instead.
func (*MySubscribedRequest) Descriptor() ([]byte, []int) {
	return file_api_subscribe_v1_subscribe_proto_rawDescGZIP(), []int{23}
}

func (x *MySubscribedRequest) GetPageNum() uint64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *MySubscribedRequest) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *MySubscribedRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *MySubscribedRequest) GetIsDescending() bool {
	if x != nil {
		return x.IsDescending
	}
	return false
}

func (x *MySubscribedRequest) GetKeyWords() string {
	if x != nil {
		return x.KeyWords
	}
	return ""
}

func (x *MySubscribedRequest) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

type MySubscribedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total    uint64             `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	PageNum  uint64             `protobuf:"varint,2,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty"`
	LastPage uint64             `protobuf:"varint,3,opt,name=last_page,json=lastPage,proto3" json:"last_page,omitempty"`
	PageSize uint64             `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Data     []*SubscribeObject `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *MySubscribedResponse) Reset() {
	*x = MySubscribedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MySubscribedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MySubscribedResponse) ProtoMessage() {}

func (x *MySubscribedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MySubscribedResponse.ProtoReflect.Descriptor instead.
func (*MySubscribedResponse) Descriptor() ([]byte, []int) {
	return file_api_subscribe_v1_subscribe_proto_rawDescGZIP(), []int{24}
}

func (x *MySubscribedResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *MySubscribedResponse) GetPageNum() uint64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *MySubscribedResponse) GetLastPage() uint64 {
	if x != nil {
		return x.LastPage
	}
	return 0
}

func (x *MySubscribedResponse) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *MySubscribedResponse) GetData() []*SubscribeObject {
	if x != nil {
		return x.Data
	}
	return nil
}

type SubscribeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Option bool   `protobuf:"varint,2,opt,name=option,proto3" json:"option,omitempty"`
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_api_subscribe_v1_subscribe_proto_rawDescGZIP(), []int{25}
}

func (x *SubscribeRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SubscribeRequest) GetOption() bool {
	if x != nil {
		return x.Option
	}
	return false
}

type SubscribeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SubscribeResponse) Reset() {
	*x = SubscribeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeResponse) ProtoMessage() {}

func (x *SubscribeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeResponse.ProtoReflect.Descriptor instead.
func (*SubscribeResponse) Descriptor() ([]byte, []int) {
	return file_api_subscribe_v1_subscribe_proto_rawDescGZIP(), []int{26}
}

func (x *SubscribeResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type Entity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status    string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Template  string `protobuf:"bytes,4,opt,name=template,proto3" json:"template,omitempty"`
	Group     string `protobuf:"bytes,5,opt,name=group,proto3" json:"group,omitempty"`
	UpdatedAt int64  `protobuf:"varint,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Entity) Reset() {
	*x = Entity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entity) ProtoMessage() {}

func (x *Entity) ProtoReflect() protoreflect.Message {
	mi := &file_api_subscribe_v1_subscribe_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entity.ProtoReflect.Descriptor instead.
func (*Entity) Descriptor() ([]byte, []int) {
	return file_api_subscribe_v1_subscribe_proto_rawDescGZIP(), []int{27}
}

func (x *Entity) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Entity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Entity) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Entity) GetTemplate() string {
	if x != nil {
		return x.Template
	}
	return ""
}

func (x *Entity) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *Entity) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

var File_api_subscribe_v1_subscribe_proto protoreflect.FileDescriptor

var file_api_subscribe_v1_subscribe_proto_rawDesc = []byte{
	0x0a, 0x20, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x10, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f,
	0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x6f, 0x0a, 0x1d, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85, 0x49, 0x44, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x13, 0x92, 0x41, 0x10, 0x32, 0x0e, 0xe5, 0xae, 0x9e, 0xe4,
	0xbd, 0x93, 0x69, 0x64, 0xe5, 0x88, 0x97, 0xe8, 0xa1, 0xa8, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x22, 0x6a, 0x0a, 0x1e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85, 0x49,
	0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe8, 0xae, 0xa2, 0xe9,
	0x98, 0x85, 0xe7, 0x8a, 0xb6, 0xe6, 0x80, 0x81, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x6f, 0x0a, 0x20, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85, 0x49, 0x44, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x42, 0x14, 0x92, 0x41, 0x11, 0x32, 0x0f, 0xe5, 0xae, 0x9e, 0xe4, 0xbd, 0x93,
	0xe7, 0xbb, 0x84, 0xe5, 0x88, 0x97, 0xe8, 0xa1, 0xa8, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x22, 0x6d, 0x0a, 0x21, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85, 0x49,
	0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe8, 0xae, 0xa2, 0xe9,
	0x98, 0x85, 0xe7, 0x8a, 0xb6, 0xe6, 0x80, 0x81, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x6c, 0x0a, 0x20, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85, 0x49, 0x44, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe6, 0xa8, 0xa1, 0xe5, 0x9e, 0x8b,
	0xe5, 0x88, 0x97, 0xe8, 0xa1, 0xa8, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x22, 0x6d,
	0x0a, 0x21, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x42, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85, 0x49, 0x44, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85, 0xe7,
	0x8a, 0xb6, 0xe6, 0x80, 0x81, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x6b, 0x0a,
	0x1f, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0d, 0x92, 0x41,
	0x0a, 0x32, 0x08, 0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x29, 0x0a, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85, 0x49, 0x44,
	0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x6c, 0x0a, 0x20, 0x55, 0x6e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32,
	0x08, 0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92,
	0x41, 0x0e, 0x32, 0x0c, 0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85, 0xe7, 0x8a, 0xb6, 0xe6, 0x80, 0x81,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xe9, 0x02, 0x0a, 0x1c, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x13, 0xe0, 0x41, 0x02,
	0x92, 0x41, 0x0d, 0x32, 0x0b, 0x50, 0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x2e, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x11, 0xe0, 0x41,
	0x02, 0x92, 0x41, 0x0b, 0x32, 0x09, 0x50, 0x61, 0x67, 0x65, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xe0, 0x41, 0x01,
	0x92, 0x41, 0x0a, 0x32, 0x08, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x20, 0x62, 0x79, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x3a, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x42, 0x15, 0xe0,
	0x41, 0x01, 0x92, 0x41, 0x0f, 0x32, 0x0d, 0x49, 0x73, 0x20, 0x64, 0x65, 0x73, 0x63, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x52, 0x0c, 0x69, 0x73, 0x44, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x12, 0x2e, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xe0, 0x41, 0x01, 0x92, 0x41, 0x0b, 0x32, 0x09, 0x4b,
	0x65, 0x79, 0x20, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x57, 0x6f, 0x72,
	0x64, 0x73, 0x12, 0x31, 0x0a, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0xe0, 0x41, 0x01, 0x92, 0x41, 0x0c, 0x32, 0x0a,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x20, 0x4b, 0x65, 0x79, 0x52, 0x09, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85, 0x49, 0x44,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x95, 0x02, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0d, 0xe0, 0x41, 0x02, 0x92, 0x41, 0x07, 0x32, 0x05, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x13, 0xe0,
	0x41, 0x02, 0x92, 0x41, 0x0d, 0x32, 0x0b, 0x50, 0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x2e, 0x0a, 0x09, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x11,
	0xe0, 0x41, 0x02, 0x92, 0x41, 0x0b, 0x32, 0x09, 0x4c, 0x61, 0x73, 0x74, 0x20, 0x70, 0x61, 0x67,
	0x65, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x42, 0x11,
	0xe0, 0x41, 0x02, 0x92, 0x41, 0x0b, 0x32, 0x09, 0x50, 0x61, 0x67, 0x65, 0x20, 0x73, 0x69, 0x7a,
	0x65, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x3f, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85,
	0xe5, 0xae, 0x9e, 0xe4, 0xbd, 0x93, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xbf, 0x01, 0x0a,
	0x0f, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x1d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0d, 0x92, 0x41,
	0x0a, 0x32, 0x08, 0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x27, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11,
	0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85, 0xe5, 0x90, 0x8d, 0xe7, 0xa7,
	0xb0, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92,
	0x41, 0x0e, 0x32, 0x0c, 0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85, 0xe6, 0x8f, 0x8f, 0xe8, 0xbf, 0xb0,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a,
	0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x13, 0x92, 0x41, 0x10, 0x32, 0x0e, 0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85, 0x65, 0x6e, 0x64, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x76,
	0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe8, 0xae,
	0xa2, 0xe9, 0x98, 0x85, 0xe5, 0x90, 0x8d, 0xe7, 0xa7, 0xb0, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x33, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe8, 0xae, 0xa2,
	0xe9, 0x98, 0x85, 0xe6, 0x8f, 0x8f, 0xe8, 0xbf, 0xb0, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc7, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0d,
	0x92, 0x41, 0x0a, 0x32, 0x08, 0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85, 0x49, 0x44, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x27, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85, 0xe5, 0x90, 0x8d,
	0xe7, 0xa7, 0xb0, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85, 0xe6, 0x8f, 0x8f, 0xe8,
	0xbf, 0xb0, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2f, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x13, 0x92, 0x41, 0x10, 0x32, 0x0e, 0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85, 0x65, 0x6e,
	0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x22, 0x95, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32,
	0x0c, 0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85, 0xe5, 0x90, 0x8d, 0xe7, 0xa7, 0xb0, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c,
	0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85, 0xe6, 0x8f, 0x8f, 0xe8, 0xbf, 0xb0, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe8, 0xae, 0xa2, 0xe9,
	0x98, 0x85, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0xc7, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85, 0x49, 0x44, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85, 0xe5,
	0x90, 0x8d, 0xe7, 0xa7, 0xb0, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85, 0xe6, 0x8f,
	0x8f, 0xe8, 0xbf, 0xb0, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2f, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x13, 0x92, 0x41, 0x10, 0x32, 0x0e, 0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x22, 0x37, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe8,
	0xae, 0xa2, 0xe9, 0x98, 0x85, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x38, 0x0a, 0x17, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85, 0x49,
	0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0x34, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe8,
	0xae, 0xa2, 0xe9, 0x98, 0x85, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0xdd, 0x02, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85, 0x49, 0x44, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85, 0xe5,
	0x90, 0x8d, 0xe7, 0xa7, 0xb0, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85, 0xe6, 0x8f,
	0x8f, 0xe8, 0xbf, 0xb0, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2f, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x13, 0x92, 0x41, 0x10, 0x32, 0x0e, 0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85,
	0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x27, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85, 0xe6, 0x95,
	0xb0, 0xe9, 0x87, 0x8f, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x17, 0x92, 0x41, 0x14, 0x32, 0x12, 0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85, 0xe5, 0x88, 0x9b, 0xe5,
	0xbb, 0xba, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x36, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x42, 0x17, 0x92, 0x41, 0x14, 0x32, 0x12, 0xe8, 0xae,
	0xa2, 0xe9, 0x98, 0x85, 0xe6, 0x9b, 0xb4, 0xe6, 0x96, 0xb0, 0xe6, 0x97, 0xb6, 0xe9, 0x97, 0xb4,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xc2, 0x02, 0x0a, 0x14,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x13, 0xe0, 0x41, 0x02, 0x92, 0x41, 0x0d, 0x32, 0x0b,
	0x50, 0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x70, 0x61, 0x67,
	0x65, 0x4e, 0x75, 0x6d, 0x12, 0x2e, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x11, 0xe0, 0x41, 0x02, 0x92, 0x41, 0x0b, 0x32,
	0x09, 0x50, 0x61, 0x67, 0x65, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xe0, 0x41, 0x01, 0x92, 0x41, 0x0a, 0x32, 0x08,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x20, 0x62, 0x79, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x79, 0x12, 0x3a, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x42, 0x15, 0xe0, 0x41, 0x01, 0x92, 0x41, 0x0f,
	0x32, 0x0d, 0x49, 0x73, 0x20, 0x64, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52,
	0x0c, 0x69, 0x73, 0x44, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x2e, 0x0a,
	0x09, 0x6b, 0x65, 0x79, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x11, 0xe0, 0x41, 0x01, 0x92, 0x41, 0x0b, 0x32, 0x09, 0x4b, 0x65, 0x79, 0x20, 0x77, 0x6f,
	0x72, 0x64, 0x73, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x31, 0x0a,
	0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x12, 0xe0, 0x41, 0x01, 0x92, 0x41, 0x0c, 0x32, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x20, 0x4b, 0x65, 0x79, 0x52, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79,
	0x22, 0x83, 0x02, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0d, 0xe0, 0x41, 0x02, 0x92, 0x41,
	0x07, 0x32, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x2e, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x13, 0xe0, 0x41, 0x02, 0x92, 0x41, 0x0d, 0x32, 0x0b, 0x50, 0x61, 0x67, 0x65, 0x20,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12,
	0x2e, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x11, 0xe0, 0x41, 0x02, 0x92, 0x41, 0x0b, 0x32, 0x09, 0x4c, 0x61, 0x73, 0x74,
	0x20, 0x70, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12,
	0x2e, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x42, 0x11, 0xe0, 0x41, 0x02, 0x92, 0x41, 0x0b, 0x32, 0x09, 0x50, 0x61, 0x67, 0x65,
	0x20, 0x73, 0x69, 0x7a, 0x65, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xac, 0x01, 0x0a, 0x17, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x23, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x13,
	0x92, 0x41, 0x10, 0x32, 0x0e, 0xe5, 0xbd, 0x93, 0xe5, 0x89, 0x8d, 0xe8, 0xae, 0xa2, 0xe9, 0x98,
	0x85, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x13, 0x92, 0x41, 0x10, 0x32, 0x0e,
	0xe7, 0x9b, 0xae, 0xe6, 0xa0, 0x87, 0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85, 0x49, 0x44, 0x52, 0x08,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x44, 0x12, 0x3b, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x49, 0x44, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x42, 0x19, 0x92,
	0x41, 0x16, 0x32, 0x14, 0xe8, 0xa2, 0xab, 0xe7, 0xa7, 0xbb, 0xe5, 0x8a, 0xa8, 0xe7, 0x9a, 0x84,
	0xe8, 0xae, 0xbe, 0xe5, 0xa4, 0x87, 0x49, 0x44, 0x52, 0x0b, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x49, 0x44, 0x73, 0x22, 0x45, 0x0a, 0x18, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe8, 0xaf, 0xb7, 0xe6, 0xb1, 0x82, 0xe7, 0x8a,
	0xb6, 0xe6, 0x80, 0x81, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xc1, 0x02, 0x0a,
	0x13, 0x4d, 0x79, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x13, 0xe0, 0x41, 0x02, 0x92, 0x41, 0x0d, 0x32, 0x0b,
	0x50, 0x61, 0x67, 0x65, 0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x70, 0x61, 0x67,
	0x65, 0x4e, 0x75, 0x6d, 0x12, 0x2e, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x11, 0xe0, 0x41, 0x02, 0x92, 0x41, 0x0b, 0x32,
	0x09, 0x50, 0x61, 0x67, 0x65, 0x20, 0x73, 0x69, 0x7a, 0x65, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xe0, 0x41, 0x01, 0x92, 0x41, 0x0a, 0x32, 0x08,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x20, 0x62, 0x79, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42,
	0x79, 0x12, 0x3a, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x42, 0x15, 0xe0, 0x41, 0x01, 0x92, 0x41, 0x0f,
	0x32, 0x0d, 0x49, 0x73, 0x20, 0x64, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52,
	0x0c, 0x69, 0x73, 0x44, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x2e, 0x0a,
	0x09, 0x6b, 0x65, 0x79, 0x5f, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x11, 0xe0, 0x41, 0x01, 0x92, 0x41, 0x0b, 0x32, 0x09, 0x4b, 0x65, 0x79, 0x20, 0x77, 0x6f,
	0x72, 0x64, 0x73, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x31, 0x0a,
	0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x12, 0xe0, 0x41, 0x01, 0x92, 0x41, 0x0c, 0x32, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x20, 0x4b, 0x65, 0x79, 0x52, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79,
	0x22, 0x82, 0x02, 0x0a, 0x14, 0x4d, 0x79, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0d, 0xe0, 0x41, 0x02, 0x92, 0x41, 0x07,
	0x32, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2e,
	0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x13, 0xe0, 0x41, 0x02, 0x92, 0x41, 0x0d, 0x32, 0x0b, 0x50, 0x61, 0x67, 0x65, 0x20, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x2e,
	0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x11, 0xe0, 0x41, 0x02, 0x92, 0x41, 0x0b, 0x32, 0x09, 0x4c, 0x61, 0x73, 0x74, 0x20,
	0x70, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12, 0x2e,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x11, 0xe0, 0x41, 0x02, 0x92, 0x41, 0x0b, 0x32, 0x09, 0x50, 0x61, 0x67, 0x65, 0x20,
	0x73, 0x69, 0x7a, 0x65, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x35,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x78, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0xe8, 0xae, 0xa2, 0xe9,
	0x98, 0x85, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x45, 0x0a, 0x06, 0x6f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x42, 0x2d, 0x92, 0x41, 0x2a, 0x32, 0x28, 0xe8,
	0xae, 0xa2, 0xe9, 0x98, 0x85, 0xe9, 0x80, 0x89, 0xe9, 0xa1, 0xb9, 0x3a, 0x31, 0x2d, 0x3e, 0xe8,
	0xae, 0xa2, 0xe9, 0x98, 0x85, 0xef, 0xbc, 0x8c, 0x30, 0x2d, 0x3e, 0xe5, 0x8f, 0x96, 0xe6, 0xb6,
	0x88, 0xe8, 0xae, 0xa2, 0xe9, 0x98, 0x85, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x3e, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x92, 0x41, 0x0e, 0x32, 0x0c, 0xe8, 0xaf, 0xb7, 0xe6, 0xb1,
	0x82, 0xe7, 0x8a, 0xb6, 0xe6, 0x80, 0x81, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0xea, 0x01, 0x0a, 0x06, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0e, 0x92, 0x41, 0x0b, 0x32, 0x09, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x20, 0x69, 0x64, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1d, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0x92, 0x41, 0x06, 0x32, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0x92, 0x41, 0x08, 0x32, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x29,
	0x0a, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0d, 0x92, 0x41, 0x0a, 0x32, 0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x08, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x92, 0x41, 0x07, 0x32, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2f, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x10, 0x92, 0x41, 0x0d, 0x32, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x20, 0x74, 0x69, 0x6d,
	0x65, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x32, 0x8c, 0x16, 0x0a,
	0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0xf2, 0x01, 0x0a, 0x16, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x42, 0x79, 0x49, 0x44, 0x73, 0x12, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x75, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d,
	0x22, 0x18, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x4f,
	0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1d, 0x61, 0x64, 0x64,
	0x20, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x20, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x20, 0x62, 0x79, 0x20, 0x69, 0x64, 0x73, 0x2a, 0x16, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x49,
	0x44, 0x73, 0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x12,
	0xff, 0x01, 0x0a, 0x19, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x32, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x79, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16,
	0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x55, 0x0a, 0x09, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x20, 0x61, 0x64, 0x64, 0x20, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x20, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x20,
	0x62, 0x79, 0x20, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x2a, 0x19, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f,
	0x4b, 0x12, 0xff, 0x01, 0x0a, 0x19, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x12,
	0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x79, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b,
	0x22, 0x16, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x55, 0x0a, 0x09,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x20, 0x61, 0x64, 0x64, 0x20, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x20, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x20, 0x62, 0x79, 0x20, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2a, 0x19, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a,
	0x02, 0x4f, 0x4b, 0x12, 0x85, 0x02, 0x0a, 0x18, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x73,
	0x12, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x81, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24,
	0x22, 0x1f, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x54, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x12, 0x20, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x20, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x20, 0x62, 0x79,
	0x20, 0x69, 0x64, 0x73, 0x2a, 0x18, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x79, 0x49, 0x44, 0x73, 0x4a, 0x0b,
	0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x12, 0xf1, 0x01, 0x0a, 0x15,
	0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x2e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x77, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x22, 0x1d,
	0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a,
	0x92, 0x41, 0x4c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1b,
	0x67, 0x65, 0x74, 0x20, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x20, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x20, 0x6c, 0x69, 0x73, 0x74, 0x2a, 0x15, 0x6c, 0x69, 0x73,
	0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x12,
	0xbb, 0x01, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x53, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f,
	0x22, 0x0a, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x3a, 0x01, 0x2a, 0x92,
	0x41, 0x3b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x10, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2a,
	0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x12, 0xc0, 0x01,
	0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x58, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x32, 0x0f,
	0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a,
	0x01, 0x2a, 0x92, 0x41, 0x3b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x12, 0x10, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x20, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x2a, 0x0f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b,
	0x12, 0xbd, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x55, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x11, 0x2a, 0x0f, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x92, 0x41, 0x3b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x12, 0x10, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x2a, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b,
	0x12, 0xae, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x12, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x4f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x92, 0x41, 0x35, 0x0a, 0x09, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x0d, 0x67, 0x65, 0x74, 0x20, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2a, 0x0c, 0x67, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f,
	0x4b, 0x12, 0xba, 0x01, 0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x58, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a,
	0x92, 0x41, 0x3b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x12,
	0x67, 0x65, 0x74, 0x20, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x20, 0x6c, 0x69,
	0x73, 0x74, 0x2a, 0x0d, 0x6c, 0x69, 0x73, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x4a, 0x0b, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x12, 0xda,
	0x01, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x64, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6f, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x14, 0x1a, 0x0f, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x52, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x12, 0x27, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x20, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x6f, 0x74, 0x68, 0x65, 0x72,
	0x20, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x0f, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4a, 0x0b,
	0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x12, 0xcc, 0x01, 0x0a, 0x0c,
	0x4d, 0x79, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x12, 0x25, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x79, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x79, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x12, 0x22, 0x0d, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2f,
	0x6d, 0x79, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x52, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x12, 0x27, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x20, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x20, 0x74, 0x6f, 0x20, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x20,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x0f, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4a, 0x0b, 0x0a,
	0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x12, 0xae, 0x01, 0x0a, 0x09, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x58, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x92, 0x41, 0x3b,
	0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x10, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x20, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2a, 0x0f, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x4a, 0x0b,
	0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x04, 0x0a, 0x02, 0x4f, 0x4b, 0x42, 0x49, 0x0a, 0x10, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x2e, 0x76, 0x31, 0x50,
	0x01, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x6b,
	0x65, 0x65, 0x6c, 0x2d, 0x69, 0x6f, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2d, 0x62, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_subscribe_v1_subscribe_proto_rawDescOnce sync.Once
	file_api_subscribe_v1_subscribe_proto_rawDescData = file_api_subscribe_v1_subscribe_proto_rawDesc
)

func file_api_subscribe_v1_subscribe_proto_rawDescGZIP() []byte {
	file_api_subscribe_v1_subscribe_proto_rawDescOnce.Do(func() {
		file_api_subscribe_v1_subscribe_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_subscribe_v1_subscribe_proto_rawDescData)
	})
	return file_api_subscribe_v1_subscribe_proto_rawDescData
}

var file_api_subscribe_v1_subscribe_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_api_subscribe_v1_subscribe_proto_goTypes = []interface{}{
	(*SubscribeEntitiesByIDsRequest)(nil),     // 0: api.subscribe.v1.SubscribeEntitiesByIDsRequest
	(*SubscribeEntitiesByIDsResponse)(nil),    // 1: api.subscribe.v1.SubscribeEntitiesByIDsResponse
	(*SubscribeEntitiesByGroupsRequest)(nil),  // 2: api.subscribe.v1.SubscribeEntitiesByGroupsRequest
	(*SubscribeEntitiesByGroupsResponse)(nil), // 3: api.subscribe.v1.SubscribeEntitiesByGroupsResponse
	(*SubscribeEntitiesByModelsRequest)(nil),  // 4: api.subscribe.v1.SubscribeEntitiesByModelsRequest
	(*SubscribeEntitiesByModelsResponse)(nil), // 5: api.subscribe.v1.SubscribeEntitiesByModelsResponse
	(*UnsubscribeEntitiesByIDsRequest)(nil),   // 6: api.subscribe.v1.UnsubscribeEntitiesByIDsRequest
	(*UnsubscribeEntitiesByIDsResponse)(nil),  // 7: api.subscribe.v1.UnsubscribeEntitiesByIDsResponse
	(*ListSubscribeEntitiesRequest)(nil),      // 8: api.subscribe.v1.ListSubscribeEntitiesRequest
	(*ListSubscribeEntitiesResponse)(nil),     // 9: api.subscribe.v1.ListSubscribeEntitiesResponse
	(*SubscribeObject)(nil),                   // 10: api.subscribe.v1.SubscribeObject
	(*CreateSubscribeRequest)(nil),            // 11: api.subscribe.v1.CreateSubscribeRequest
	(*CreateSubscribeResponse)(nil),           // 12: api.subscribe.v1.CreateSubscribeResponse
	(*UpdateSubscribeRequest)(nil),            // 13: api.subscribe.v1.UpdateSubscribeRequest
	(*UpdateSubscribeResponse)(nil),           // 14: api.subscribe.v1.UpdateSubscribeResponse
	(*DeleteSubscribeRequest)(nil),            // 15: api.subscribe.v1.DeleteSubscribeRequest
	(*DeleteSubscribeResponse)(nil),           // 16: api.subscribe.v1.DeleteSubscribeResponse
	(*GetSubscribeRequest)(nil),               // 17: api.subscribe.v1.GetSubscribeRequest
	(*GetSubscribeResponse)(nil),              // 18: api.subscribe.v1.GetSubscribeResponse
	(*ListSubscribeRequest)(nil),              // 19: api.subscribe.v1.ListSubscribeRequest
	(*ListSubscribeResponse)(nil),             // 20: api.subscribe.v1.ListSubscribeResponse
	(*ChangeSubscribedRequest)(nil),           // 21: api.subscribe.v1.ChangeSubscribedRequest
	(*ChangeSubscribedResponse)(nil),          // 22: api.subscribe.v1.ChangeSubscribedResponse
	(*MySubscribedRequest)(nil),               // 23: api.subscribe.v1.MySubscribedRequest
	(*MySubscribedResponse)(nil),              // 24: api.subscribe.v1.MySubscribedResponse
	(*SubscribeRequest)(nil),                  // 25: api.subscribe.v1.SubscribeRequest
	(*SubscribeResponse)(nil),                 // 26: api.subscribe.v1.SubscribeResponse
	(*Entity)(nil),                            // 27: api.subscribe.v1.Entity
}
var file_api_subscribe_v1_subscribe_proto_depIdxs = []int32{
	27, // 0: api.subscribe.v1.ListSubscribeEntitiesResponse.data:type_name -> api.subscribe.v1.Entity
	10, // 1: api.subscribe.v1.ListSubscribeResponse.data:type_name -> api.subscribe.v1.SubscribeObject
	10, // 2: api.subscribe.v1.MySubscribedResponse.data:type_name -> api.subscribe.v1.SubscribeObject
	0,  // 3: api.subscribe.v1.Subscribe.SubscribeEntitiesByIDs:input_type -> api.subscribe.v1.SubscribeEntitiesByIDsRequest
	2,  // 4: api.subscribe.v1.Subscribe.SubscribeEntitiesByGroups:input_type -> api.subscribe.v1.SubscribeEntitiesByGroupsRequest
	4,  // 5: api.subscribe.v1.Subscribe.SubscribeEntitiesByModels:input_type -> api.subscribe.v1.SubscribeEntitiesByModelsRequest
	6,  // 6: api.subscribe.v1.Subscribe.UnsubscribeEntitiesByIDs:input_type -> api.subscribe.v1.UnsubscribeEntitiesByIDsRequest
	8,  // 7: api.subscribe.v1.Subscribe.ListSubscribeEntities:input_type -> api.subscribe.v1.ListSubscribeEntitiesRequest
	11, // 8: api.subscribe.v1.Subscribe.CreateSubscribe:input_type -> api.subscribe.v1.CreateSubscribeRequest
	13, // 9: api.subscribe.v1.Subscribe.UpdateSubscribe:input_type -> api.subscribe.v1.UpdateSubscribeRequest
	15, // 10: api.subscribe.v1.Subscribe.DeleteSubscribe:input_type -> api.subscribe.v1.DeleteSubscribeRequest
	17, // 11: api.subscribe.v1.Subscribe.GetSubscribe:input_type -> api.subscribe.v1.GetSubscribeRequest
	19, // 12: api.subscribe.v1.Subscribe.ListSubscribe:input_type -> api.subscribe.v1.ListSubscribeRequest
	21, // 13: api.subscribe.v1.Subscribe.ChangeSubscribed:input_type -> api.subscribe.v1.ChangeSubscribedRequest
	23, // 14: api.subscribe.v1.Subscribe.MySubscribed:input_type -> api.subscribe.v1.MySubscribedRequest
	25, // 15: api.subscribe.v1.Subscribe.Subscribe:input_type -> api.subscribe.v1.SubscribeRequest
	1,  // 16: api.subscribe.v1.Subscribe.SubscribeEntitiesByIDs:output_type -> api.subscribe.v1.SubscribeEntitiesByIDsResponse
	3,  // 17: api.subscribe.v1.Subscribe.SubscribeEntitiesByGroups:output_type -> api.subscribe.v1.SubscribeEntitiesByGroupsResponse
	5,  // 18: api.subscribe.v1.Subscribe.SubscribeEntitiesByModels:output_type -> api.subscribe.v1.SubscribeEntitiesByModelsResponse
	7,  // 19: api.subscribe.v1.Subscribe.UnsubscribeEntitiesByIDs:output_type -> api.subscribe.v1.UnsubscribeEntitiesByIDsResponse
	9,  // 20: api.subscribe.v1.Subscribe.ListSubscribeEntities:output_type -> api.subscribe.v1.ListSubscribeEntitiesResponse
	12, // 21: api.subscribe.v1.Subscribe.CreateSubscribe:output_type -> api.subscribe.v1.CreateSubscribeResponse
	14, // 22: api.subscribe.v1.Subscribe.UpdateSubscribe:output_type -> api.subscribe.v1.UpdateSubscribeResponse
	16, // 23: api.subscribe.v1.Subscribe.DeleteSubscribe:output_type -> api.subscribe.v1.DeleteSubscribeResponse
	18, // 24: api.subscribe.v1.Subscribe.GetSubscribe:output_type -> api.subscribe.v1.GetSubscribeResponse
	20, // 25: api.subscribe.v1.Subscribe.ListSubscribe:output_type -> api.subscribe.v1.ListSubscribeResponse
	22, // 26: api.subscribe.v1.Subscribe.ChangeSubscribed:output_type -> api.subscribe.v1.ChangeSubscribedResponse
	24, // 27: api.subscribe.v1.Subscribe.MySubscribed:output_type -> api.subscribe.v1.MySubscribedResponse
	26, // 28: api.subscribe.v1.Subscribe.Subscribe:output_type -> api.subscribe.v1.SubscribeResponse
	16, // [16:29] is the sub-list for method output_type
	3,  // [3:16] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_api_subscribe_v1_subscribe_proto_init() }
func file_api_subscribe_v1_subscribe_proto_init() {
	if File_api_subscribe_v1_subscribe_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_subscribe_v1_subscribe_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeEntitiesByIDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_subscribe_v1_subscribe_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeEntitiesByIDsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_subscribe_v1_subscribe_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeEntitiesByGroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_subscribe_v1_subscribe_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeEntitiesByGroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_subscribe_v1_subscribe_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeEntitiesByModelsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_subscribe_v1_subscribe_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeEntitiesByModelsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_subscribe_v1_subscribe_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeEntitiesByIDsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_subscribe_v1_subscribe_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeEntitiesByIDsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_subscribe_v1_subscribe_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSubscribeEntitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_subscribe_v1_subscribe_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSubscribeEntitiesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_subscribe_v1_subscribe_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_subscribe_v1_subscribe_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_subscribe_v1_subscribe_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSubscribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_subscribe_v1_subscribe_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_subscribe_v1_subscribe_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSubscribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_subscribe_v1_subscribe_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_subscribe_v1_subscribe_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSubscribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_subscribe_v1_subscribe_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_subscribe_v1_subscribe_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSubscribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_subscribe_v1_subscribe_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_subscribe_v1_subscribe_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSubscribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_subscribe_v1_subscribe_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeSubscribedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_subscribe_v1_subscribe_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeSubscribedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_subscribe_v1_subscribe_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MySubscribedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_subscribe_v1_subscribe_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MySubscribedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_subscribe_v1_subscribe_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_subscribe_v1_subscribe_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_subscribe_v1_subscribe_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_subscribe_v1_subscribe_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_subscribe_v1_subscribe_proto_goTypes,
		DependencyIndexes: file_api_subscribe_v1_subscribe_proto_depIdxs,
		MessageInfos:      file_api_subscribe_v1_subscribe_proto_msgTypes,
	}.Build()
	File_api_subscribe_v1_subscribe_proto = out.File
	file_api_subscribe_v1_subscribe_proto_rawDesc = nil
	file_api_subscribe_v1_subscribe_proto_goTypes = nil
	file_api_subscribe_v1_subscribe_proto_depIdxs = nil
}
